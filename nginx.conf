user root root;
worker_processes  5;
worker_rlimit_nofile 30000;

events {
	worker_connections  4096;
}

http {
	proxy_max_temp_file_size 0;
	limit_traffic_rate_zone rate $remote_addr 32m;
	log_format timed_combined '[$time_local]\t$remote_addr\t$body_bytes_sent\t $status\t$request_time\t$request\t "$http_user_agent"\t"http://$host"\t"$http_skyclient" "$upstream_cache_status" "$request_body"';
	access_log /opt/nginx/pdl/logs/nginx-access.log timed_combined;
 
	server {
		listen 80;
		server_name localhost;
		error_log /opt/nginx/pdl/logs/error.log debug;
		include mime.types;
		
		location /limit/config {
			if ($request_method != POST) {
				return 405;
			}

			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'POST';

			content_by_lua_block {
				local string_format = string.format
				ngx.req.read_body()
				local args = ngx.req.get_body_data() or ""
				local ip_address = string.match(args, "%d+.%d+.%d+.%d+")
				local bps_speed = string.match(args, "%d+k")
				local user_index = string.find(args, "user_id")
				local user_id = nil
				if(user_index == nil)
					then
						user_id = ""
					else
						user_id = string.sub(args, user_index + 8)
					end
				if(user_id == "")
					then
						local file, err = io.open("/opt/nginx/pdl/conf/addresses/"..ip_address..".dat", "w")
						if file == nil	
							then
								ngx.say(" "..err);
							else
								file:write(bps_speed)
								file:close()
								ngx.print(" Throttling for ip=", ip_address, " has been set to ", bps_speed, "B/s.\n")
							end
					else
						local file, err = io.open("/opt/nginx/pdl/conf/addresses/"..user_id..".dat", "w")
						if file == nil
							then 
								ngx.say(" "..err)
							else
								file:write(ip_address..";"..bps_speed)
								file:close()
								ngx.print(" Throttling for user_id=", user_id, " (", ip_address, ") has been set to ", bps_speed, "B/s.\n")
							end 
					end
			}
		
		}

		location /limit_pdl/ {
			limit_traffic_rate rate 463k;
			proxy_pass http://test.vodos.oscdn.skycdn.it/;
		}

		location / {
			root /opt/nginx/html;
		}

		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root html;
		}
	}
}
